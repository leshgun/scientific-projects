def main(N, e, c, c1):
    R.<r> = PolynomialRing(ZZ)
    f = pow(r, 9) + 3*pow(r, 6)*(c - c1) + \
            3*pow(r, 3)*(pow(c, 2) + 7*c*c1 + pow(c1, 2)) + pow(c - c1, 3)
    X = int(0.5*pow(N, 1/9))
    n, m = f.degree(),5
    arr = []
    for i in range(m):
        for j in range(n):
            g = pow(N, m-i)*pow(r, j)*pow(f, i)
            g = g(r*X)
            arr += [g.list()]
    mat = matrix([a+[0]*(len(arr[-1])-len(a)) for a in arr])
    ml = mat.LLL()
#     nu = ml[0]
#     nuN = CC(sqrt(reduce(lambda xx,yy: xx+yy, [pow(i, 2) for i in nu])))
#     print(all([CC(sqrt(reduce(lambda xx,yy: xx+yy, [pow(j, 2) for j in i]))) > nuN for i in ml][1:]))
    pol = R(list(ml[0]))
    pol = pol(r/X)
    roots = pol.roots(multiplicities=False)
    print(roots)
    for rr in roots:
        rr = roots[0]
        _.<mm> = PolynomialRing(ZZ)
        ff = 3*rr*(mm**2) + 3*(rr**2)*mm + rr**3 + c - c1
        posM = ff.roots(multiplicities=False)
        if posM: return posM, rr
    return [], 0
            
    
def checkRoots(posM, r, *args):
    N, e, c, c1 = args
    print('Possible messages:', posM)
    for m in posM:
        print('----', m, type(m))
        if pow(int(m), e, N) == c:
            print('R:', r)
            print('Message 1:', m)
            print('Message 2:', int(m)+r)
            print('c1 = (m+r)^e:', pow(int(m+r), e, N)==c1)
    
    

if __name__ == '__main__':
    e = 3
    N = int("""7427348605337420439226351301259396736338668628478026364247537354940635099417985194658970761928680
    925182008511152254688145103860128004202503366474283301612075177785324580367485485658736331441943472952155621
    639662643715068050809082488144556149444490361655502468281994103450718847571742070878683972591764582106285078
    065864827820587920185765360247986736413307433316395696422364074349807321647196675748416486392177198614794875
    770634343""".replace("\n", "").replace(" ", ""))
    c = int("""7427348605337420439226351301259396736338668628478026364247537354940635099417985194658970761928680
    925182008511152254688145103860128004202503366474283301612075177785324580367485485658736331441943472952155621
    639662643715068050809082488144556149444490361655502468281994103450718847571742070878683972591764582106285078
    065864827820587920185765360247986736413307433316395696422364074349776315370516375929379843300349534846155124
    209892775""".replace("\n", "").replace(" ", ""))
    c1 = int("""742734860533742043922635130125939673633866862847802636424753735494063509941798519465897076192868
    092518200851115225468814510386012800420250336647428330161207517778532458036748548565873633144194347295215562
    163966264371506805080908248814455614944449036165550246828199410345071884757174207087868397259176458210628507
    806586482782058792018576536024798673641330743331639569642236407434977631537051670860808323138997395283855429
    8235535119""".replace("\n", "").replace(" ", ""))
    posM, r = main(N, e, c, c1)
    checkRoots(posM, r, N, e, c, c1)